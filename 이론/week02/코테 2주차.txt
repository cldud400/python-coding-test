
block를 구분하는 괄호가 없기 때문에 들여쓰기가 중요하다
들여쓰기를 SP로 했으면 끝까지 SP, Tab로 했으면 끝까지 Tab
들여쓰기를 똑같이 맞춰야 실행이 된다 SP한칸이면 한칸으로 맞추기
(동일한 들여쓰기로 !!!!!!)

조건문
if 명제 : (if는 항상 :로 끝난다)

명제가 아니어도 bool로 바꿔서 명제 취급이 가능하다

if에 빈 블럭이 필요하면 pass
if False:
 pass


반복문
while  

for : 입력이 리스트일 때 사용
리스트 만큼만 동작한다.

함수

입력 input = 입력받은 모든 값은 문자열 형태로 돌려준다!!

for _ in range(n): #반복 횟수 변수지정을 할 필요가 없기 때문에 _ 사용
반복 횟수를 지정할 때 사용

for num in range(1,n + 1): #마지막 원소는 열려있다!!!!
1~n까지의 리스트를 만들 때 사용

문제를 풀 때 풀이 과정을 서술할 수 있어야한다!!
유클리드 호제법
두 수의 최대공약수(GCD)를 구하는 과정은 다음과 같다.
a, b가 주어졌을 때, b가 a보다 크면 b의 값을 a로, a의 값을 b로 지정한다.
a를 b로 나눈 나머지를 n으로 지정한다.
n이 0이면 b가 최대공약수이다. (종료)
n이 0이 아니라면, a의 값을 b로, b의 값을 n로 지정하고, 2번으로 돌아간다

a, b = b, a 파이썬에서 사용하는 exchange방법!!

중첩루프
- 3개 이상 중첩은 잘못된 루프

다차원 리스트
ndim = [['' for _ in range(n)] for _ in range(n)]